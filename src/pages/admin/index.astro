---
import BaseLayout from "../../layouts/BaseLayout.astro";
import ContentList from "../../components/admin/ContentList.tsx";
import ContentEditor from "../../components/admin/ContentEditor.tsx";
import AssetManager from "../../components/admin/AssetManager.tsx";
import { CMSService, CMSContent } from "../../lib/cms.ts";
---

<BaseLayout 
  lang="de" 
  title="Admin Dashboard - Weib-Coding" 
  description="Content-Management-System für Weib-Coding"
>
  <div id="admin-app" class="min-h-screen">
    <!-- Admin Dashboard will be rendered here by React -->
  </div>

  <script>
    // Simple admin dashboard state management
    let currentView = 'dashboard';
    let currentContentType = 'property';
    let currentLocale = 'de';
    let editingContent = null;
    let showAssetManager = false;

    function renderAdminApp() {
      const app = document.getElementById('admin-app');
      if (!app) return;

      switch (currentView) {
        case 'dashboard':
          app.innerHTML = renderDashboard();
          break;
        case 'content-list':
          app.innerHTML = renderContentList();
          break;
        case 'content-editor':
          app.innerHTML = renderContentEditor();
          break;
        case 'asset-manager':
          app.innerHTML = renderAssetManager();
          break;
      }
    }

    function renderDashboard() {
      return `
        <div class="max-w-6xl mx-auto p-6">
          <h1 class="text-3xl font-bold mb-8" style="color: var(--color-text);">Admin Dashboard</h1>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <div class="card p-6 cursor-pointer hover:shadow-lg transition-shadow" onclick="showContentList('property')">
              <h3 class="text-xl font-semibold mb-2" style="color: var(--color-text);">Immobilien</h3>
              <p style="color: var(--color-muted);">Verwalte Immobilien-Inhalte</p>
            </div>
            
            <div class="card p-6 cursor-pointer hover:shadow-lg transition-shadow" onclick="showContentList('page')">
              <h3 class="text-xl font-semibold mb-2" style="color: var(--color-text);">Seiten</h3>
              <p style="color: var(--color-muted);">Verwalte Website-Seiten</p>
            </div>
            
            <div class="card p-6 cursor-pointer hover:shadow-lg transition-shadow" onclick="showContentList('district')">
              <h3 class="text-xl font-semibold mb-2" style="color: var(--color-text);">Stadtteile</h3>
              <p style="color: var(--color-muted);">Verwalte Stadtteil-Informationen</p>
            </div>
            
            <div class="card p-6 cursor-pointer hover:shadow-lg transition-shadow" onclick="showAssetManager()">
              <h3 class="text-xl font-semibold mb-2" style="color: var(--color-text);">Assets</h3>
              <p style="color: var(--color-muted);">Verwalte Bilder und Dateien</p>
            </div>
            
            <div class="card p-6 cursor-pointer hover:shadow-lg transition-shadow" onclick="showLocaleSelector()">
              <h3 class="text-xl font-semibold mb-2" style="color: var(--color-text);">Sprachen</h3>
              <p style="color: var(--color-muted);">DE | EN | TH</p>
            </div>
            
            <div class="card p-6 cursor-pointer hover:shadow-lg transition-shadow" onclick="showSettings()">
              <h3 class="text-xl font-semibold mb-2" style="color: var(--color-text);">Einstellungen</h3>
              <p style="color: var(--color-muted);">System-Konfiguration</p>
            </div>
          </div>
        </div>
      `;
    }

    function renderContentList() {
      return `
        <div class="max-w-6xl mx-auto p-6">
          <div class="flex items-center justify-between mb-6">
            <h1 class="text-2xl font-bold" style="color: var(--color-text);">
              ${getTypeLabel(currentContentType)} - ${getLocaleLabel(currentLocale)}
            </h1>
            <div class="flex gap-2">
              <button 
                class="px-4 py-2 rounded-lg border transition-colors hover:opacity-80"
                style="border-color: var(--card-border); color: var(--color-text);"
                onclick="showLocaleSelector()"
              >
                ${getLocaleLabel(currentLocale)}
              </button>
              <button 
                class="px-4 py-2 rounded-lg text-white transition-colors hover:opacity-80"
                style="background-color: var(--color-primary);"
                onclick="createNewContent()"
              >
                Neu erstellen
              </button>
            </div>
          </div>
          
          <div class="space-y-4">
            <div class="card p-4">
              <div class="flex items-center justify-between">
                <div>
                  <h3 class="font-semibold" style="color: var(--color-text);">Park Villa mit Privatpool</h3>
                  <p class="text-sm" style="color: var(--color-muted);">Luxuriöse Villa mit eigenem Pool in ruhiger Lage.</p>
                  <div class="flex items-center gap-4 text-xs mt-1" style="color: var(--color-muted);">
                    <span>Slug: park-villa-privatpool</span>
                    <span>Erstellt: 01.01.2025</span>
                    <span class="px-2 py-1 rounded-full bg-green-100 text-green-800">Veröffentlicht</span>
                  </div>
                </div>
                <div class="flex items-center gap-2">
                  <button 
                    class="px-3 py-1 rounded border transition-colors hover:opacity-80"
                    style="border-color: var(--card-border); color: var(--color-text);"
                    onclick="editContent('property-de-park-villa-1')"
                  >
                    Bearbeiten
                  </button>
                  <button 
                    class="px-3 py-1 rounded border transition-colors hover:opacity-80"
                    style="border-color: var(--card-border); color: #ef4444;"
                    onclick="deleteContent('property-de-park-villa-1')"
                  >
                    Löschen
                  </button>
                </div>
              </div>
            </div>
          </div>
          
          <div class="mt-6">
            <button 
              class="px-4 py-2 rounded-lg border transition-colors hover:opacity-80"
              style="border-color: var(--card-border); color: var(--color-text);"
              onclick="showDashboard()"
            >
              ← Zurück zum Dashboard
            </button>
          </div>
        </div>
      `;
    }

    function renderContentEditor() {
      return `
        <div class="max-w-4xl mx-auto p-6">
          <div class="flex items-center justify-between mb-6">
            <h1 class="text-2xl font-bold" style="color: var(--color-text);">
              ${editingContent ? 'Inhalt bearbeiten' : 'Neuen Inhalt erstellen'}
            </h1>
            <div class="flex gap-2">
              <button 
                class="px-4 py-2 rounded-lg border transition-colors hover:opacity-80"
                style="border-color: var(--card-border); color: var(--color-text);"
                onclick="showContentList()"
              >
                Abbrechen
              </button>
              <button 
                class="px-4 py-2 rounded-lg text-white transition-colors hover:opacity-80"
                style="background-color: var(--color-primary);"
                onclick="saveContent()"
              >
                Speichern
              </button>
            </div>
          </div>
          
          <div class="card p-6 space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium mb-2" style="color: var(--color-text);">Titel *</label>
                <input 
                  type="text" 
                  class="w-full px-3 py-2 border rounded-lg"
                  style="background-color: var(--input-bg); border-color: var(--input-border); color: var(--color-text);"
                  placeholder="Titel eingeben"
                  value="${editingContent?.title || ''}"
                />
              </div>
              <div>
                <label class="block text-sm font-medium mb-2" style="color: var(--color-text);">Slug *</label>
                <input 
                  type="text" 
                  class="w-full px-3 py-2 border rounded-lg"
                  style="background-color: var(--input-bg); border-color: var(--input-border); color: var(--color-text);"
                  placeholder="url-freundlicher-name"
                  value="${editingContent?.slug || ''}"
                />
              </div>
            </div>
            
            <div>
              <label class="block text-sm font-medium mb-2" style="color: var(--color-text);">Inhalt</label>
              <textarea 
                class="w-full px-3 py-2 border rounded-lg"
                style="background-color: var(--input-bg); border-color: var(--input-border); color: var(--color-text);"
                rows="8"
                placeholder="Inhalt eingeben..."
              >${editingContent?.content || ''}</textarea>
            </div>
          </div>
        </div>
      `;
    }

    function renderAssetManager() {
      return `
        <div class="max-w-6xl mx-auto p-6">
          <div class="flex items-center justify-between mb-6">
            <h1 class="text-2xl font-bold" style="color: var(--color-text);">Asset-Manager</h1>
            <button 
              class="px-4 py-2 rounded-lg border transition-colors hover:opacity-80"
              style="border-color: var(--card-border); color: var(--color-text);"
              onclick="showDashboard()"
            >
              Schließen
            </button>
          </div>
          
          <div class="card p-6 mb-6">
            <input 
              type="file" 
              multiple 
              accept="image/*,video/*,.pdf,.doc,.docx"
              class="w-full px-3 py-2 border rounded-lg"
              style="background-color: var(--input-bg); border-color: var(--input-border);"
            />
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div class="card p-4">
              <div class="aspect-video bg-gray-100 rounded-lg mb-3 flex items-center justify-center">
                <span style="color: var(--color-muted);">Bild Vorschau</span>
              </div>
              <h3 class="font-semibold text-sm" style="color: var(--color-text);">park-villa-1.jpg</h3>
              <p class="text-xs" style="color: var(--color-muted);">1.02 MB</p>
            </div>
          </div>
        </div>
      `;
    }

    function getTypeLabel(type) {
      switch (type) {
        case 'property': return 'Immobilie';
        case 'page': return 'Seite';
        case 'district': return 'Stadtteil';
        default: return type;
      }
    }

    function getLocaleLabel(locale) {
      switch (locale) {
        case 'de': return 'Deutsch';
        case 'en': return 'English';
        case 'th': return 'ไทย';
        default: return locale;
      }
    }

    // Navigation functions
    window.showDashboard = () => {
      currentView = 'dashboard';
      renderAdminApp();
    };

    window.showContentList = (type) => {
      currentView = 'content-list';
      currentContentType = type;
      renderAdminApp();
    };

    window.showContentEditor = (content) => {
      currentView = 'content-editor';
      editingContent = content;
      renderAdminApp();
    };

    window.showAssetManager = () => {
      currentView = 'asset-manager';
      renderAdminApp();
    };

    window.createNewContent = () => {
      editingContent = null;
      showContentEditor();
    };

    window.editContent = (id) => {
      // In real implementation, load content by ID
      editingContent = { id, title: 'Park Villa mit Privatpool', slug: 'park-villa-privatpool', content: 'Luxuriöse Villa...' };
      showContentEditor();
    };

    window.deleteContent = (id) => {
      if (confirm('Sind Sie sicher, dass Sie diesen Inhalt löschen möchten?')) {
        // In real implementation, delete content
        showContentList(currentContentType);
      }
    };

    window.saveContent = () => {
      // In real implementation, save content
      alert('Inhalt gespeichert!');
      showContentList(currentContentType);
    };

    window.showLocaleSelector = () => {
      const locales = [
        { code: 'de', label: 'Deutsch' },
        { code: 'en', label: 'English' },
        { code: 'th', label: 'ไทย' }
      ];
      
      const selector = locales.map(locale => 
        `<button 
          class="px-3 py-1 rounded border transition-colors hover:opacity-80 ${currentLocale === locale.code ? 'bg-blue-100' : ''}"
          style="border-color: var(--card-border); color: var(--color-text);"
          onclick="currentLocale = '${locale.code}'; showContentList('${currentContentType}')"
        >
          ${locale.label}
        </button>`
      ).join('');
      
      document.body.insertAdjacentHTML('beforeend', `
        <div id="locale-selector" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            <h3 class="text-lg font-semibold mb-4" style="color: var(--color-text);">Sprache wählen</h3>
            <div class="flex gap-2 mb-4">
              ${selector}
            </div>
            <button 
              class="px-4 py-2 rounded-lg border transition-colors hover:opacity-80"
              style="border-color: var(--card-border); color: var(--color-text);"
              onclick="document.getElementById('locale-selector').remove()"
            >
              Schließen
            </button>
          </div>
        </div>
      `);
    };

    window.showSettings = () => {
      alert('Einstellungen - Coming Soon!');
    };

    // Initialize
    renderAdminApp();
  </script>
</BaseLayout>
